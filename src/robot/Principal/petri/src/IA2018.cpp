/*
 * Generated by PetriLab - https://sigilence-technologies.com/petrilab
 * Version 3.0.0-beta1
 */

#include "../Deplacement.h"
#include "../Moteur.h"
#include "../Servo.h"
#include "../Utils.h"
#include <cstdint>
#include <petrilab/Cpp/Action.h>
#include <petrilab/Cpp/MemberPetriDynamicLib.h>
#include <petrilab/Cpp/PetriDebug.h>
#include <petrilab/Cpp/PetriUtils.h>
#include <petrilab/Cpp/VarSlot.h>
#include <petrilab/Cpp/Variable.h>

using namespace Petri;

struct FillResult {
	void* start;
	void* end;
};

extern "C" FillResult PoserSpheres_fill(PetriNet& petriNet,
                                        std::uint64_t entitiesOffset,
                                        bool firstLevel,
                                        Petri_actionResult_t (*initEntryPtr)(VarSlot&),
                                        Petri_actionResult_t (*exitActionPtr)(VarSlot&));
extern "C" Petri_actionResult_t PoserSpheres_entryInit(VarSlot&);
extern "C" Petri_actionResult_t PoserSpheres_exitAction(VarSlot&);
extern "C" FillResult GoberCube_fill(PetriNet& petriNet,
                                     std::uint64_t entitiesOffset,
                                     bool firstLevel,
                                     Petri_actionResult_t (*initEntryPtr)(VarSlot&),
                                     Petri_actionResult_t (*exitActionPtr)(VarSlot&));
extern "C" Petri_actionResult_t GoberCube_entryInit(VarSlot&);
extern "C" Petri_actionResult_t GoberCube_exitAction(VarSlot&);
enum Petri_Param_Enum_GoberCube : std::uint_fast32_t { Petri_Param_Enum_GoberCube_Vcommande = 0 };

extern "C" FillResult OuvrirReservoir_fill(PetriNet& petriNet,
                                           std::uint64_t entitiesOffset,
                                           bool firstLevel,
                                           Petri_actionResult_t (*initEntryPtr)(VarSlot&),
                                           Petri_actionResult_t (*exitActionPtr)(VarSlot&));
extern "C" Petri_actionResult_t OuvrirReservoir_entryInit(VarSlot&);
extern "C" Petri_actionResult_t OuvrirReservoir_exitAction(VarSlot&);
extern "C" FillResult ActiverSwitch_fill(PetriNet& petriNet,
                                         std::uint64_t entitiesOffset,
                                         bool firstLevel,
                                         Petri_actionResult_t (*initEntryPtr)(VarSlot&),
                                         Petri_actionResult_t (*exitActionPtr)(VarSlot&));
extern "C" Petri_actionResult_t ActiverSwitch_entryInit(VarSlot&);
extern "C" Petri_actionResult_t ActiverSwitch_exitAction(VarSlot&);
extern "C" FillResult ActiverAbeille_fill(PetriNet& petriNet,
                                          std::uint64_t entitiesOffset,
                                          bool firstLevel,
                                          Petri_actionResult_t (*initEntryPtr)(VarSlot&),
                                          Petri_actionResult_t (*exitActionPtr)(VarSlot&));
extern "C" Petri_actionResult_t ActiverAbeille_entryInit(VarSlot&);
extern "C" Petri_actionResult_t ActiverAbeille_exitAction(VarSlot&);
extern "C" FillResult PoserCubes_fill(PetriNet& petriNet,
                                      std::uint64_t entitiesOffset,
                                      bool firstLevel,
                                      Petri_actionResult_t (*initEntryPtr)(VarSlot&),
                                      Petri_actionResult_t (*exitActionPtr)(VarSlot&));
extern "C" Petri_actionResult_t PoserCubes_entryInit(VarSlot&);
extern "C" Petri_actionResult_t PoserCubes_exitAction(VarSlot&);
enum Petri_Var_Enum : std::uint_fast32_t {
	Petri_Var_Enum_Vaction = 0,
	Petri_Var_Enum_Vresult = 1,
	Petri_Var_Enum_Vresult_macro = 2
};

static void fillVariables(Petri::VarSlot& variables) {
	variables[Petri_Var_Enum_Vaction].setName("$action");
	variables[Petri_Var_Enum_Vaction].setDefaultValue(42);
	variables[Petri_Var_Enum_Vresult].setName("$result");
	variables[Petri_Var_Enum_Vresult].setDefaultValue(0);
	variables[Petri_Var_Enum_Vresult_macro].setName("$result_macro");
	variables[Petri_Var_Enum_Vresult_macro].setDefaultValue(0);
}

extern "C" Petri_actionResult_t IA2018_entryInit(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	if(!_PETRI_PRIVATE_GET_VARIABLES_.isFirstSlot()) {
		_PETRI_PRIVATE_GET_VARIABLES_.pushVariables(3);
	}
	fillVariables(_PETRI_PRIVATE_GET_VARIABLES_);
	return static_cast<actionResult_t>(Petri::Utility::doNothing());
}

extern "C" Petri_actionResult_t IA2018_exitAction(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_EXEC_RESULT_ = static_cast<actionResult_t>(Petri::Utility::printText(static_cast<std::string const&>(
	    "End of petri for action n°" + std::to_string(_PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vaction].value()) +
	    "; returned value = " + std::to_string(_PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vresult].value()))));
	auto _PETRI_PRIVATE_GET_RETURN_VALUE_0_ = _PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vresult].value();
	_PETRI_PRIVATE_GET_VARIABLES_.pop();
	_PETRI_PRIVATE_GET_VARIABLES_.pushReturnValues(1);
	_PETRI_PRIVATE_GET_VARIABLES_[0].setName("result");
	_PETRI_PRIVATE_GET_VARIABLES_[0].value() = _PETRI_PRIVATE_GET_RETURN_VALUE_0_;
	return _PETRI_PRIVATE_EXEC_RESULT_;
}

static Petri_actionResult_t state_7_invocation(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	return static_cast<actionResult_t>(([&_PETRI_PRIVATE_GET_VARIABLES_]() {
		_PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vresult].value() =
		    _PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vresult_macro].value();
		return (ResultatAction)Petri::Utility::doNothing();
	})());
}

static Petri_actionResult_t state_15_invocation(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	return static_cast<actionResult_t>(Petri::Utility::doNothing());
}

static Petri_actionResult_t state_176_invocation(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	return static_cast<actionResult_t>(Petri::Utility::printText(static_cast<std::string const&>(
	    "Action choisie : n°" + std::to_string(_PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vaction].value()))));
}

static Petri_actionResult_t state_8_invocation(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_TEMP_ = PoserSpheres_entryInit(_PETRI_PRIVATE_GET_VARIABLES_);
	return _PETRI_PRIVATE_TEMP_;
}

static Petri_actionResult_t state_8_fetchReturnValues(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_EXEC_RESULT_ = PoserSpheres_exitAction(_PETRI_PRIVATE_GET_VARIABLES_);
	auto _PETRI_PRIVATE_GET_RETURN_VALUE_result_macro = _PETRI_PRIVATE_GET_VARIABLES_[0].value(); // result
	_PETRI_PRIVATE_GET_VARIABLES_.pop();
	_PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vresult_macro].value() = _PETRI_PRIVATE_GET_RETURN_VALUE_result_macro;
	return _PETRI_PRIVATE_EXEC_RESULT_;
}

static Petri_actionResult_t state_16_invocation(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_TEMP_ = GoberCube_entryInit(_PETRI_PRIVATE_GET_VARIABLES_);
	return _PETRI_PRIVATE_TEMP_;
}

static Petri_actionResult_t state_16_fetchReturnValues(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_EXEC_RESULT_ = GoberCube_exitAction(_PETRI_PRIVATE_GET_VARIABLES_);
	auto _PETRI_PRIVATE_GET_RETURN_VALUE_result_macro = _PETRI_PRIVATE_GET_VARIABLES_[0].value(); // result
	_PETRI_PRIVATE_GET_VARIABLES_.pop();
	_PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vresult_macro].value() = _PETRI_PRIVATE_GET_RETURN_VALUE_result_macro;
	return _PETRI_PRIVATE_EXEC_RESULT_;
}

static Petri_actionResult_t state_125_invocation(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_TEMP_ = OuvrirReservoir_entryInit(_PETRI_PRIVATE_GET_VARIABLES_);
	return _PETRI_PRIVATE_TEMP_;
}

static Petri_actionResult_t state_125_fetchReturnValues(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_EXEC_RESULT_ = OuvrirReservoir_exitAction(_PETRI_PRIVATE_GET_VARIABLES_);
	auto _PETRI_PRIVATE_GET_RETURN_VALUE_result_macro = _PETRI_PRIVATE_GET_VARIABLES_[0].value(); // result
	_PETRI_PRIVATE_GET_VARIABLES_.pop();
	_PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vresult_macro].value() = _PETRI_PRIVATE_GET_RETURN_VALUE_result_macro;
	return _PETRI_PRIVATE_EXEC_RESULT_;
}

static Petri_actionResult_t state_150_invocation(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_TEMP_ = ActiverSwitch_entryInit(_PETRI_PRIVATE_GET_VARIABLES_);
	return _PETRI_PRIVATE_TEMP_;
}

static Petri_actionResult_t state_150_fetchReturnValues(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_EXEC_RESULT_ = ActiverSwitch_exitAction(_PETRI_PRIVATE_GET_VARIABLES_);
	auto _PETRI_PRIVATE_GET_RETURN_VALUE_result_macro = _PETRI_PRIVATE_GET_VARIABLES_[0].value(); // result
	_PETRI_PRIVATE_GET_VARIABLES_.pop();
	_PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vresult_macro].value() = _PETRI_PRIVATE_GET_RETURN_VALUE_result_macro;
	return _PETRI_PRIVATE_EXEC_RESULT_;
}

static Petri_actionResult_t state_157_invocation(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_TEMP_ = ActiverAbeille_entryInit(_PETRI_PRIVATE_GET_VARIABLES_);
	return _PETRI_PRIVATE_TEMP_;
}

static Petri_actionResult_t state_157_fetchReturnValues(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_EXEC_RESULT_ = ActiverAbeille_exitAction(_PETRI_PRIVATE_GET_VARIABLES_);
	auto _PETRI_PRIVATE_GET_RETURN_VALUE_result_macro = _PETRI_PRIVATE_GET_VARIABLES_[0].value(); // result
	_PETRI_PRIVATE_GET_VARIABLES_.pop();
	_PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vresult_macro].value() = _PETRI_PRIVATE_GET_RETURN_VALUE_result_macro;
	return _PETRI_PRIVATE_EXEC_RESULT_;
}

static Petri_actionResult_t state_177_invocation(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_TEMP_ = PoserCubes_entryInit(_PETRI_PRIVATE_GET_VARIABLES_);
	return _PETRI_PRIVATE_TEMP_;
}

static Petri_actionResult_t state_177_fetchReturnValues(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_EXEC_RESULT_ = PoserCubes_exitAction(_PETRI_PRIVATE_GET_VARIABLES_);
	auto _PETRI_PRIVATE_GET_RETURN_VALUE_result_macro = _PETRI_PRIVATE_GET_VARIABLES_[0].value(); // result
	_PETRI_PRIVATE_GET_VARIABLES_.pop();
	_PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vresult_macro].value() = _PETRI_PRIVATE_GET_RETURN_VALUE_result_macro;
	return _PETRI_PRIVATE_EXEC_RESULT_;
}

static Petri_actionResult_t state_184_invocation(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	return static_cast<actionResult_t>(Petri::Utility::doNothing());
}

static Petri_actionResult_t state_228_invocation(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	return static_cast<actionResult_t>(reculerDe(static_cast<Distance>(30_cm)));
}

static Petri_actionResult_t state_338_invocation(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	return static_cast<actionResult_t>(allerA(static_cast<Distance>(75_cm), static_cast<Distance>(80_cm)));
}

static Petri_actionResult_t state_339_invocation(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	return static_cast<actionResult_t>(tournerAbsolu(static_cast<Angle>(180_deg)));
}

static Petri_actionResult_t state_229_invocation(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_ARG_0_ = 1;
	auto _PETRI_PRIVATE_TEMP_ = GoberCube_entryInit(_PETRI_PRIVATE_GET_VARIABLES_);
	_PETRI_PRIVATE_GET_VARIABLES_[Petri_Param_Enum_GoberCube_Vcommande].value() = _PETRI_PRIVATE_ARG_0_;
	return _PETRI_PRIVATE_TEMP_;
}

static Petri_actionResult_t state_229_fetchReturnValues(VarSlot& _PETRI_PRIVATE_GET_VARIABLES_) {
	auto _PETRI_PRIVATE_EXEC_RESULT_ = GoberCube_exitAction(_PETRI_PRIVATE_GET_VARIABLES_);
	auto _PETRI_PRIVATE_GET_RETURN_VALUE_result_macro = _PETRI_PRIVATE_GET_VARIABLES_[0].value(); // result
	_PETRI_PRIVATE_GET_VARIABLES_.pop();
	_PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vresult_macro].value() = _PETRI_PRIVATE_GET_RETURN_VALUE_result_macro;
	return _PETRI_PRIVATE_EXEC_RESULT_;
}

static bool transition_391_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return true;
}

static bool transition_392_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return true;
}

static bool transition_358_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return true;
}

static bool transition_359_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return _PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vaction].value() == 6;
}

static bool transition_360_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return _PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vaction].value() == 3;
}

static bool transition_361_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return _PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vaction].value() == 5;
}

static bool transition_362_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return _PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vaction].value() == 2;
}

static bool transition_363_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return _PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vaction].value() == 1;
}

static bool transition_364_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return true;
}

static bool transition_365_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return true;
}

static bool transition_366_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return true;
}

static bool transition_367_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return true;
}

static bool transition_368_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return true;
}

static bool transition_369_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return _PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vaction].value() == 4;
}

static bool transition_370_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return true;
}

static bool transition_372_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return _PETRI_PRIVATE_GET_VARIABLES_[Petri_Var_Enum_Vaction].value() == 42;
}

static bool transition_390_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return true;
}

static bool transition_354_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return true;
}

static bool transition_355_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return true;
}

static bool transition_356_invocation(VarSlot const& _PETRI_PRIVATE_GET_VARIABLES_,
                                      Petri_actionResult_t _PETRI_PRIVATE_GET_ACTION_RESULT_) {
	return true;
}


extern "C" FillResult IA2018_fill(PetriNet& petriNet,
                                  std::uint64_t entitiesOffset,
                                  bool firstLevel,
                                  Petri_actionResult_t (*initEntryPtr)(VarSlot&),
                                  Petri_actionResult_t (*exitActionPtr)(VarSlot&)) {
	auto& state_0 = petriNet.addAction(Action(0 + entitiesOffset, "Root_Entry", initEntryPtr, 0), firstLevel);
	auto& state_4 = petriNet.addAction(Action(4 + entitiesOffset, "Root_End", exitActionPtr, 1), false);
	state_4.addVariable(Petri_Var_Enum_Vaction);
	state_4.addVariable(Petri_Var_Enum_Vresult);
	auto& state_7 = petriNet.addAction(Action(7 + entitiesOffset, "Root_Result", &state_7_invocation, 1), false);
	state_7.addVariable(Petri_Var_Enum_Vresult);
	state_7.addVariable(Petri_Var_Enum_Vresult_macro);
	auto& state_15 = petriNet.addAction(Action(15 + entitiesOffset, "Root_Action selector", &state_15_invocation, 0), false);
	auto& state_176 = petriNet.addAction(Action(176 + entitiesOffset, "Root_print", &state_176_invocation, 0), false);
	state_176.addVariable(Petri_Var_Enum_Vaction);
	auto state_8_endpoints = PoserSpheres_fill(petriNet, entitiesOffset + 8, false, state_8_invocation, state_8_fetchReturnValues);
	(*reinterpret_cast<Action*>(state_8_endpoints.start)).setRequiredTokens(1);
	auto state_16_endpoints = GoberCube_fill(petriNet, entitiesOffset + 16, false, state_16_invocation, state_16_fetchReturnValues);
	(*reinterpret_cast<Action*>(state_16_endpoints.start)).setRequiredTokens(1);
	auto state_125_endpoints =
	    OuvrirReservoir_fill(petriNet, entitiesOffset + 125, false, state_125_invocation, state_125_fetchReturnValues);
	(*reinterpret_cast<Action*>(state_125_endpoints.start)).setRequiredTokens(1);
	auto state_150_endpoints =
	    ActiverSwitch_fill(petriNet, entitiesOffset + 150, false, state_150_invocation, state_150_fetchReturnValues);
	(*reinterpret_cast<Action*>(state_150_endpoints.start)).setRequiredTokens(1);
	auto state_157_endpoints =
	    ActiverAbeille_fill(petriNet, entitiesOffset + 157, false, state_157_invocation, state_157_fetchReturnValues);
	(*reinterpret_cast<Action*>(state_157_endpoints.start)).setRequiredTokens(1);
	auto state_177_endpoints =
	    PoserCubes_fill(petriNet, entitiesOffset + 177, false, state_177_invocation, state_177_fetchReturnValues);
	(*reinterpret_cast<Action*>(state_177_endpoints.start)).setRequiredTokens(1);
	auto& state_184 = petriNet.addAction(Action(184 + entitiesOffset, "Root_Déterministe_Entry", &state_184_invocation, 1), false);
	auto& state_228 = petriNet.addAction(Action(228 + entitiesOffset, "Root_Déterministe_CUBES", &state_228_invocation, 0), false);
	auto& state_338 =
	    petriNet.addAction(Action(338 + entitiesOffset, "Root_Déterministe_allerA", &state_338_invocation, 1), false);
	auto& state_339 = petriNet.addAction(Action(339 + entitiesOffset, "Root_Déterministe_turn", &state_339_invocation, 1), false);
	auto state_229_endpoints =
	    GoberCube_fill(petriNet, entitiesOffset + 229, false, state_229_invocation, state_229_fetchReturnValues);
	(*reinterpret_cast<Action*>(state_229_endpoints.start)).setRequiredTokens(1);


	state_0.addTransition(391 + entitiesOffset, "Root_Entry_to_Action selector", state_15, &transition_391_invocation);
	state_0.addTransition(392 + entitiesOffset, "Root_Entry_to_print", state_176, &transition_392_invocation);
	state_7.addTransition(358 + entitiesOffset, "Root_", state_4, &transition_358_invocation);
	auto& transition_359 =
	    state_15.addTransition(359 + entitiesOffset, "Root_A == 6", (*reinterpret_cast<Action*>(state_8_endpoints.start)), &transition_359_invocation);
	transition_359.addVariable(Petri_Var_Enum_Vaction);
	auto& transition_360 = state_15.addTransition(360 + entitiesOffset,
	                                              "Root_A == 3",
	                                              (*reinterpret_cast<Action*>(state_16_endpoints.start)),
	                                              &transition_360_invocation);
	transition_360.addVariable(Petri_Var_Enum_Vaction);
	auto& transition_361 = state_15.addTransition(361 + entitiesOffset,
	                                              "Root_A == 5",
	                                              (*reinterpret_cast<Action*>(state_125_endpoints.start)),
	                                              &transition_361_invocation);
	transition_361.addVariable(Petri_Var_Enum_Vaction);
	auto& transition_362 = state_15.addTransition(362 + entitiesOffset,
	                                              "Root_A == 2",
	                                              (*reinterpret_cast<Action*>(state_150_endpoints.start)),
	                                              &transition_362_invocation);
	transition_362.addVariable(Petri_Var_Enum_Vaction);
	auto& transition_363 = state_15.addTransition(363 + entitiesOffset,
	                                              "Root_A == 1",
	                                              (*reinterpret_cast<Action*>(state_157_endpoints.start)),
	                                              &transition_363_invocation);
	transition_363.addVariable(Petri_Var_Enum_Vaction);
	(*reinterpret_cast<Action*>(state_157_endpoints.end)).addTransition(364 + entitiesOffset, "Root_end", state_7, &transition_364_invocation);
	(*reinterpret_cast<Action*>(state_150_endpoints.end)).addTransition(365 + entitiesOffset, "Root_end", state_7, &transition_365_invocation);
	(*reinterpret_cast<Action*>(state_16_endpoints.end)).addTransition(366 + entitiesOffset, "Root_end", state_7, &transition_366_invocation);
	(*reinterpret_cast<Action*>(state_125_endpoints.end)).addTransition(367 + entitiesOffset, "Root_end", state_7, &transition_367_invocation);
	(*reinterpret_cast<Action*>(state_8_endpoints.end)).addTransition(368 + entitiesOffset, "Root_end", state_7, &transition_368_invocation);
	auto& transition_369 = state_15.addTransition(369 + entitiesOffset,
	                                              "Root_A == 4",
	                                              (*reinterpret_cast<Action*>(state_177_endpoints.start)),
	                                              &transition_369_invocation);
	transition_369.addVariable(Petri_Var_Enum_Vaction);
	(*reinterpret_cast<Action*>(state_177_endpoints.end)).addTransition(370 + entitiesOffset, "Root_end", state_7, &transition_370_invocation);
	auto& transition_372 = state_15.addTransition(372 + entitiesOffset, "Root_A == 42", state_184, &transition_372_invocation);
	transition_372.addVariable(Petri_Var_Enum_Vaction);
	state_184.addTransition(390 + entitiesOffset, "Root_Déterministe_Entry_to_CUBES", state_228, &transition_390_invocation);
	state_228.addTransition(354 + entitiesOffset, "Root_Déterministe_", state_338, &transition_354_invocation);
	state_338.addTransition(355 + entitiesOffset, "Root_Déterministe_", state_339, &transition_355_invocation);
	state_339.addTransition(356 + entitiesOffset,
	                        "Root_Déterministe_",
	                        (*reinterpret_cast<Action*>(state_229_endpoints.start)),
	                        &transition_356_invocation);

	return (FillResult){&state_0, &state_4};
}
namespace Petri {
	namespace Generated {
		namespace IA2018 {
			std::unique_ptr<::Petri::PetriNet> createPetriNet() {
				auto petriNet = std::make_unique<PetriNet>("IA2018", 3);
				petriNet->setLogVerbosity(PetriNet::VerbosityNothing);
				IA2018_fill(*petriNet, 0, true, &IA2018_entryInit, &IA2018_exitAction);
				fillVariables(petriNet->variables());
				return petriNet;
			}

			std::unique_ptr<::Petri::PetriDebug> createDebugPetriNet() {
				auto petriNet = std::make_unique<PetriDebug>("IA2018", 3);
				petriNet->setLogVerbosity(PetriNet::VerbosityNothing);
				IA2018_fill(*petriNet, 0, true, &IA2018_entryInit, &IA2018_exitAction);
				fillVariables(petriNet->variables());
				return petriNet;
			}
		}
	}
}

extern "C" void* IA2018_create() {
	return Petri::Generated::IA2018::createPetriNet().release();
}

extern "C" void* IA2018_createDebug() {
	return Petri::Generated::IA2018::createDebugPetriNet().release();
}

extern "C" char* IA2018_evaluate(void* vars, char const* libPath) {
	return Petri::Utility::loadEvaluateAndInvoke(vars, libPath, "IA2018");
}
extern "C" char const* IA2018_getHash() {
	return "17CE7AF460211A59A7EC00C07E9DC9FDC26515E0A91493B30ADF54855E725ED3";
}


extern "C" void* IA2018_createLibForEditor() {
	return ::Petri::MemberPetriDynamicLib::libForEditor("IA2018", 12346);
}
